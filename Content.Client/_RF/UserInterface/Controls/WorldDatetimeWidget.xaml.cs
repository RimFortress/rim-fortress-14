using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._RF.UserInterface.Controls;

[GenerateTypedNameReferences]
public sealed partial class WorldDatetimeWidget : UIWidget
{
    [Dependency] private readonly ILocalizationManager _locale = default!;

    public WorldDatetimeWidget()
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);
    }

    public void UpdateInfo(TimeSpan time, TimeSpan dayDuration, float temp = 293.15f)
    {
        // We take the length of an in-game day in 24 hours and get the current time
        var gameTimeHours = time.TotalSeconds % dayDuration.TotalSeconds
            / dayDuration.TotalSeconds * 24;

        var hours = (int) gameTimeHours;
        var minutes = (int) ((gameTimeHours - hours) * 60);

        var timeText = $"{hours:00}:{minutes:00}";
        var days = (int) Math.Floor(time / dayDuration) + 1;

        Text.Text = $"{timeText}, {_locale.GetString("world-datetime-widget-days")} {days}";

        switch (gameTimeHours)
        {
            case < 6:
                Icon.TexturePath = "/Textures/_RF/Interface/moon-solid.svg.192dpi.png";
                Icon.Modulate = new Color(18, 79, 201);
                break;
            case < 19:
                Icon.TexturePath = "/Textures/_RF/Interface/sun-solid.svg.192dpi.png";
                Icon.Modulate = new Color(186, 123, 20);
                break;
            default:
                Icon.TexturePath = "/Textures/_RF/Interface/moon-solid.svg.192dpi.png";
                Icon.Modulate = new Color(18, 79, 201);
                break;
        }

        var tempC = temp - 273.15f;
        Temperature.Text = $"{tempC:0.0}\u00b0";

        switch (tempC)
        {
            case < 10:
                TempIcon.TexturePath = "/Textures/_RF/Interface/temperature-low-solid.svg.192dpi.png";
                TempIcon.Modulate = new Color(42, 157, 143);
                break;
            case < 20:
                TempIcon.TexturePath = "/Textures/_RF/Interface/temperature-half-solid.svg.192dpi.png";
                TempIcon.Modulate = new Color(233, 196, 106);
                break;
            case < 30:
                TempIcon.TexturePath = "/Textures/_RF/Interface/temperature-three-quarters-solid.svg.192dpi.png";
                TempIcon.Modulate = new Color(244, 162, 97);
                break;
            case < 40:
                TempIcon.TexturePath = "/Textures/_RF/Interface/temperature-high-solid.svg.192dpi.png";
                TempIcon.Modulate = new Color(231, 111, 81);
                break;
        }
    }
}

