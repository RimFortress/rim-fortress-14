using System.Numerics;
using Content.Client.UserInterface.Screens;
using Content.Client.UserInterface.Systems.Chat.Widgets;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Timing;

namespace Content.Client._RF.UserInterface.Controls;

[GenerateTypedNameReferences]
public sealed partial class RimFortressScreen : InGameScreen
{
    public override ChatBox ChatBox => Chat;

    public RimFortressScreen()
    {
        RobustXamlLoader.Load(this);

        AutoscaleMaxResolution = new Vector2i(1080, 770);

        SetAnchorPreset(MainViewport, LayoutPreset.Wide);
        SetAnchorPreset(ViewportContainer, LayoutPreset.Wide);
        SetAnchorAndMarginPreset(Left, LayoutPreset.LeftWide, margin: 10);
        SetAnchorAndMarginPreset(Chat, LayoutPreset.TopRight, margin: 10);
        SetAnchorAndMarginPreset(Right, LayoutPreset.RightWide, margin: 10);

        // We dont need it
        TopBar.CharacterButton.Visible = false;
        TopBar.ActionButton.Visible = false;
        TopBar.EmotesButton.Visible = false;
        TopBar.CraftingButton.Visible = false;

        Chat.OnChatResizeFinish += ChatOnResizeFinish;
        Datetime.ChatToggle.OnToggled += args => Chat.Visible = args.Pressed;
        Hotbar.BuildButton.OnPressed += _ => ToggleExpected(ConstructionMenu);
        Hotbar.PassiveTasksButton.OnPressed += _ => ToggleExpected(PassiveTasksMenu);
    }

    private void ChatOnResizeFinish(Vector2 _)
    {
        var marginBottom = Chat.GetValue<float>(MarginBottomProperty);
        var marginLeft = Chat.GetValue<float>(MarginLeftProperty);
        OnChatResized?.Invoke(new Vector2(marginBottom, marginLeft));
    }

    private void ToggleExpected(Control control)
    {
        control.Visible = !control.Visible;

        if (control != ConstructionMenu)
            ConstructionMenu.Visible = false;

        if (control != PassiveTasksMenu)
            PassiveTasksMenu.Visible = false;
    }

    public override void SetChatSize(Vector2 size)
    {
        SetMarginBottom(Chat, size.X);
        SetMarginLeft(Chat, size.Y);
    }

    protected override void FrameUpdate(FrameEventArgs args)
    {
        base.FrameUpdate(args);
        PopList.Update();
    }

    public void EnsureSetup()
    {
        ConstructionMenu.EnsureSetup();
        PassiveTasksMenu.EnsureSetup();
    }
}

